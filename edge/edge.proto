syntax = "proto3";

package edge;

service Edge {
  rpc Info(InfoRequest) returns (InfoReply) {}    
  rpc MakeTransformer (MakeTransformerRequest) returns (MakeTransformerReply) {}
  rpc Nodes (NodesRequest) returns (NodesReply) {}  
  rpc Read (ReadRequest) returns (stream ReadReply) {}  
}

message InfoRequest {
    string node = 1;
}

message InfoReply {
    string key = 1;
    string id = 2;
    map<string,string> origin = 3;
    repeated string ingresses = 4;
    string version = 5;
}

message NodesRequest {} // possibly add a filter

message NodesReply {
    repeated string nodes = 1;
}

message MakeTransformerRequest {
    string node = 1;
    // if set, then javascript transformer is created
    bytes javascript = 2;
}

message MakeTransformerReply {
    string id = 1;
}

message ReadRequest {
    string uri = 1;
    string transformer_id = 2;
    string accumulator = 3;
    int64 start = 4;
    int64 end = 5;
    bool tail = 6;
    uint32 input_limit = 7;
    uint32 output_limit = 8;
    double duration_limit = 9;
    string node = 10;
}

message ReadReply {
    repeated string rows = 1;
    string last_accumulator = 2;
    int64 last_offset = 3;
}
