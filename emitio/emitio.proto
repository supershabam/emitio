syntax = "proto3";

package emitio;

service Emitio {
    rpc Info(InfoRequest) returns (InfoReply) {}    
    rpc MakeTransformer (MakeTransformerRequest) returns (MakeTransformerReply) {}
    rpc Read (ReadRequest) returns (stream ReadReply) {}
}

message ReadRequest {
    bytes start = 1;
    bytes end = 2;
    string transformer_id = 3;
    string accumulator = 4;
    uint32 input_limit = 5;
    uint32 output_limit = 6;
    double duration_limit = 7;
    bool tail = 8;
}

message ReadReply {
    repeated string rows = 1;
    string last_accumulator = 2;
    bytes last_input_key = 3;
}

message InfoRequest {}

message InfoReply {
    string key = 1;
    string id = 2;
    map<string,string> origin = 3;
    repeated string ingresses = 4;
    string version = 5;
}

message MakeTransformerRequest {
    bytes javascript = 1;
}

message MakeTransformerReply {
    string id = 1;
}
